from pathlib import Path
import datetime
import os
import platform
import sys

class LocalStorage:
    @staticmethod
    def save_markdown(text: str, output_file: str, input_file: str, language: str = None):
        output_path = Path(output_file)
        input_path = Path(input_file)
        output_path.parent.mkdir(parents=True, exist_ok=True)
        
        # Get file metadata
        file_stats = input_path.stat()
        file_size_mb = file_stats.st_size / (1024 * 1024)  # Convert to MB
        
        # Get system information
        system_info = {
            'OS': platform.system(),
            'OS Version': platform.version(),
            'Python Version': sys.version.split()[0],
            'AWS Region': os.getenv('AWS_REGION', 'unknown')
        }
        
        # Create markdown content with extended metadata
        current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        markdown_content = f"""# Transcription

## Metadata
- Created: {current_time}
- Source File: {input_path.name}
- File Size: {file_size_mb:.2f} MB
- Duration: [Audio duration will be added in future version]
- Format: {input_path.suffix[1:].upper()}
- Language: {"Auto-detected" if not language else language}

## System Information
- Operating System: {system_info['OS']} ({system_info['OS Version']})
- Python Version: {system_info['Python Version']}
- AWS Region: {system_info['AWS Region']}

## Processing Information
- Transcription Service: AWS Transcribe
- Language: {"Auto-detected" if not language else language}
- Output Format: Markdown

## Content

{text}

---
Generated by AWS Transcribe Application
"""
        
        with open(output_file, 'w') as f:
            f.write(markdown_content)